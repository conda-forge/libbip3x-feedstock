{% set name = "libbip3x" %}
{% set version = "3.0.0" %}

{% set so_major_version = version.split('.')[0] %}

{% set bip3x_h = ["bip3x_config.h", "bip3x_crypto.h", "bip3x_hdkey_encoder.h", "bip3x_mnemonic.h"] %}
{% set cbip3x_h = ["cbip3x_config.h", "cbip3x.h", "cbip3x_hdkey_encoder.h"] %}
{% set details_h = ["PCGRand.hpp", "uint256.h", "uint256_t.hpp", "utils.h"] %}
{% set crypto_h = [
  "address.h", "base58.h", "bignum.h", "bip39_english.h", "bip39.h",
  "blake256.h", "check_mem.h", "common.h", "ecdsa.h", "hasher.h",
  "hmac.h", "hmac_sha256.h", "hmac_sha512.h", "memzero.h", "options.h",
  "packed_attr.h", "pbkdf2.hpp", "rand.h", "rfc6979.h", "ripemd160.h",
  "secp256k1.h", "secp256k1.table", "sha256.h", "sha2.hpp", "sha3.h",
  "sha512.h", "win_endian.h",
] %}
{% set bip3x_header_paths = {
  'bip3x': bip3x_h,
  'bip3x/crypto': crypto_h,
  'bip3x/details': details_h
} %}
package:
  name: libbip3x-split
  version: {{ version }}

source:
  url: https://github.com/edwardstock/bip3x/archive/refs/tags/{{ version }}.tar.gz
  sha256: ef663ad90c6251452509943e621c337d88ea9afb9e14432dcad1f4bb7b175fb8
  patches:
    - patches/0001-add-so-version.patch
    - patches/0002-add-so-version-c.patch
    - patches/0003-add-so-version-jni.patch

build:
  number: 2

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ stdlib('c') }}
    - cmake
    - ninja
  host:
    - openjdk
    - openssl

outputs:
  - name: libbip3x
    build:
      run_exports:
        - {{ pin_subpackage('libbip3x-' ~ so_major_version) }}
    files:
      # Core Headers
      {% for path, headers in bip3x_header_paths.items() %}
        {% for header in headers %}
      - include/{{ path }}/{{ header }}  # [unix]
      - include\\{{ path | replace('/', '\\\\') }}\\{{ header }}  # [win]
        {% endfor %}
      {% endfor %}
      
      # Libraries
      - lib/libbip3x.so  # [linux]
      - lib/libbip3x.dylib  # [osx]
      - lib\\bip3x.lib  # [win]
      - bin\\bip3x.dll  # [win]
        
      - lib/pkgconfig/bip3x.pc  # [unix]
      - lib\\pkgconfig\\bip3x.pc  # [win]
        
      - lib/cmake/bip3x-config.cmake  # [unix]
      - lib\\cmake\\bip3x-config.cmake  # [win]
      - lib/cmake/bip3x-config-version.cmake  # [unix]
      - lib\\cmake\\bip3x-config-version.cmake  # [win]
      - lib/cmake/bip3x-targets.cmake  # [unix]
      - lib\\cmake\\bip3x-targets.cmake  # [win]
      - lib/cmake/bip3x-targets-release.cmake  # [unix]
      - lib\\cmake\\bip3x-targets-release.cmake  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ stdlib('c') }}
      run:
        - {{ pin_subpackage('libbip3x-' ~ so_major_version, exact=True) }}
    test:
      commands:
        # Core Headers
        {% for path, headers in bip3x_header_paths.items() %}
          {% for header in headers %}
        - test -f ${PREFIX}/include/{{ path }}/{{ header }}  # [unix]
        - if not exist %PREFIX%\\include\\{{ path | replace('/', '\\\\') }}\\{{ header }} exit 1  # [win]
          {% endfor %}
        {% endfor %}

        - test -f ${PREFIX}/lib/pkgconfig/bip3x.pc  # [unix]
        - if not exist %PREFIX%\\lib\\pkgconfig\\bip3x.pc exit 1  # [win]

        {% set bip3_cmake = [
          "bip3x-config.cmake", "bip3x-config-version.cmake",
          "bip3x-targets.cmake",
        ] %}
        {% for cmake in bip3_cmake %}
        - test -f ${PREFIX}/lib/cmake/{{ cmake }}  # [unix]
        - if not exist %PREFIX%\\lib\\cmake\\{{ cmake }} exit 1  # [win]
        {% endfor %}
        - test -f ${PREFIX}/lib/cmake/bip3x-targets-release.cmake  # [unix]
        - if not exist %PREFIX%\\lib\\cmake\\bip3x-targets-release.cmake exit 1  # [win]

        - test -f ${PREFIX}/lib/libbip3x${SHLIB_EXT}  # [unix]
        - if not exist %PREFIX%\\bin\\bip3x%SHLIB_EXT% exit 1  # [win]
        - if not exist %PREFIX%\\lib\\bip3x.lib exit 1  # [win]

  - name: libcbip3x
    build:
      run_exports:
        - {{ pin_subpackage('libbip3x-' ~ so_major_version) }}
        - {{ pin_subpackage('libcbip3x-' ~ so_major_version) }}
    files:
      {% for header in cbip3x_h %}
      - include/cbip3x/{{ header }}  # [unix]
      - include\\cbip3x\\{{ header }}  # [win]
      {% endfor %}
      - lib/libcbip3x.so  # [linux]
      - lib/libcbip3x.dylib  # [osx]
      - lib\\cbip3x.lib  # [win]
      - bin\\cbip3x.dll  # [win]
      - lib/pkgconfig/cbip3x.pc  # [unix]
      - lib\\pkgconfig\\cbip3x.pc  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ stdlib('c') }}
      host:
        - {{ pin_subpackage('libbip3x-' ~ so_major_version, exact=True) }}
      run:
        - {{ pin_subpackage('libbip3x-' ~ so_major_version, exact=True) }}
        - {{ pin_subpackage('libcbip3x-' ~ so_major_version, exact=True) }}
    test:
      source_files:
        - test-release
      requires:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
      commands:
        # C-binding headers
        {% for header in cbip3x_h %}
        - test -f ${PREFIX}/include/cbip3x/{{ header }}  # [unix]
        - if not exist %PREFIX%\\include\\cbip3x\\{{ header }} exit 1  # [win]
        {% endfor %}

        - test -f ${PREFIX}/lib/libcbip3x${SHLIB_EXT}  # [unix]
        - if not exist %PREFIX%\\bin\\cbip3x%SHLIB_EXT% exit 1  # [win]
        - if not exist %PREFIX%\\lib\\cbip3x.lib exit 1  # [win]
        - test -f ${PREFIX}/lib/pkgconfig/cbip3x.pc  # [unix]
        - if not exist %PREFIX%\\lib\\pkgconfig\\cbip3x.pc exit 1  # [win]

        # Key testing phase: This test needs both libbbip3x.so.3 and libcbip3x.so.3
        - (cd test-release && LD_PRELOAD="${PREFIX}/lib/libbip3x.so.3:${PREFIX}/lib/libcbip3x.so.3:${PREFIX}/lib/libgcc_s.so.1:${PREFIX}/lib/libstdc++.so.6" ./bin/bip3x-test)  # [linux]
        - (cd test-release && DYLD_INSERT_LIBRARIES="${PREFIX}/lib/libbip3x.3.dylib:${PREFIX}/lib/libcbip3x.3.dylib" ./bin/bip3x-test)  # [osx]
        - cd test-release\\bin  # [win]
        - bip3x-test.exe  # [win]

  - name: libbip3x_jni
    build:
      run_exports:
        - {{ pin_subpackage('libbip3x-' ~ so_major_version) }}
        - {{ pin_subpackage('libbip3x_jni-' ~ so_major_version) }}
    files:
      - lib64/libbip3x_jni.so  # [linux]
      - lib/libbip3x_jni.dylib  # [osx]
      - lib\\bip3x_jni.lib  # [win]
      - bin\\bip3x_jni.dll  # [win]
      - lib/pkgconfig/bip3x_jni.pc  # [unix]
      - lib\\pkgconfig\\bip3x_jni.pc  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ stdlib('c') }}
      host:
        - {{ pin_subpackage('libbip3x-' ~ so_major_version, exact=True) }}
      run:
        - {{ pin_subpackage('libbip3x-' ~ so_major_version, exact=True) }}
        - {{ pin_subpackage('libbip3x_jni-' ~ so_major_version, exact=True) }}
        - openjdk
    test:
      requires:
        - {{ compiler('c') }}
        - cmake >=3.26
        - make
      commands:
        # Installation files
        - test -f ${PREFIX}/lib64/libbip3x_jni${SHLIB_EXT}  # [linux]
        - test -f ${PREFIX}/lib/libbip3x_jni${SHLIB_EXT}  # [osx]
        - if not exist %PREFIX%\\bin\\bip3x_jni%SHLIB_EXT% exit 1  # [win]
        - if not exist %PREFIX%\\lib\\bip3x_jni.lib exit 1  # [win]
        - test -f ${PREFIX}/lib/pkgconfig/bip3x_jni.pc  # [unix]
        - if not exist %PREFIX%\\lib\\pkgconfig\\bip3x_jni.pc exit 1  # [win]

  - name: libbip3x-{{ so_major_version }}
    build:
      run_exports:
        - {{ pin_subpackage('libbip3x-' ~ so_major_version) }}
    files:
      - lib/libbip3x.so.{{ so_major_version }}  # [linux]
      - lib/libbip3x.{{ so_major_version }}.dylib  # [osx]
      - bin\\bip3x.{{ so_major_version }}.dll  # [win]
      - lib/libbip3x.so.{{ version }}  # [linux]
      - lib/libbip3x.{{ version }}.dylib  # [osx]
      - bin\\bip3x.{{ version }}.dll  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ stdlib("c") }}
    test:
      source_files:
        - test-release
      commands:
        # No headers (verify no potential overlap)
        {% for path, headers in bip3x_header_paths.items() %}
          {% for header in headers %}
        - test ! -f ${PREFIX}/include/{{ path }}/{{ header }}  # [unix]
        - if exist %PREFIX%\\include\\{{ path | replace('/', '\\\\') }}\\{{ header }} exit 1  # [win]
          {% endfor %}
        {% endfor %}
        {% for header in cbip3x_h %}
        - test ! -f ${PREFIX}/include/cbip3x/{{ header }}  # [unix]
        - if exist %PREFIX%\\include\\cbip3x\\{{ header }} exit 1  # [win]
        {% endfor %}

        # Versioned bip3x library
        - test -f ${PREFIX}/lib/libbip3x${SHLIB_EXT}.{{ so_major_version }}  # [linux]
        - test -f ${PREFIX}/lib/libbip3x.{{ so_major_version }}${SHLIB_EXT}  # [osx]
        - if not exist %PREFIX%\\bin\\bip3x.{{ so_major_version }}%SHLIB_EXT% exit 1  # [win]
        - test -f ${PREFIX}/lib/libbip3x${SHLIB_EXT}.{{ version }}  # [linux]
        - test -f ${PREFIX}/lib/libbip3x.{{ version }}${SHLIB_EXT}  # [osx]
        - if not exist %PREFIX%\\bin\\bip3x.{{ version }}%SHLIB_EXT% exit 1  # [win]

        # No non-versioned library
        - test ! -f ${PREFIX}/lib/libbip3x${SHLIB_EXT}  # [unix]
        - if exist %PREFIX%\\bin\\bip3x%SHLIB_EXT% exit 1  # [win]
        - if exist %PREFIX%\\lib\\bip3x.lib exit 1  # [win]
        - test ! -f ${PREFIX}/lib/libcbip3x${SHLIB_EXT}  # [unix]
        - if exist %PREFIX%\\bin\\cbip3x%SHLIB_EXT% exit 1  # [win]
        - if exist %PREFIX%\\lib\\cbip3x.lib exit 1  # [win]
        - test ! -f ${PREFIX}/lib64/libbip3x_jni${SHLIB_EXT}  # [linux]
        - test ! -f ${PREFIX}/lib/libbip3x_jni${SHLIB_EXT}  # [osx]
        - if exist %PREFIX%\\bin\\bip3x_jni%SHLIB_EXT% exit 1  # [win]
        - if exist %PREFIX%\\lib\\bip3x_jni.lib exit 1  # [win]

        # No C-binding versioned library
        - test ! -f ${PREFIX}/lib/libcbip3x${SHLIB_EXT}.{{ so_major_version }}  # [linux]
        - test ! -f ${PREFIX}/lib/libcbip3x.{{ so_major_version }}${SHLIB_EXT}  # [osx]
        - if exist %PREFIX%\\bin\\cbip3x.{{ so_major_version }}%SHLIB_EXT% exit 1  # [win]
        - test ! -f ${PREFIX}/lib/libcbip3x${SHLIB_EXT}.{{ version }}  # [linux]
        - test ! -f ${PREFIX}/lib/libcbip3x.{{ version }}${SHLIB_EXT}  # [osx]
        - if exist %PREFIX%\\bin\\cbip3x.{{ version }}%SHLIB_EXT% exit 1  # [win]

        # No JNI versioned library
        - test ! -f ${PREFIX}/lib64/libbip3x_jni${SHLIB_EXT}.{{ so_major_version }}  # [linux]
        - test ! -f ${PREFIX}/lib/libbip3x_jni.{{ so_major_version }}${SHLIB_EXT}  # [osx]
        - if exist %PREFIX%\\bin\\bip3x_jni.{{ so_major_version }}%SHLIB_EXT% exit 1  # [win]
        - test ! -f ${PREFIX}/lib64/libbip3x_jni${SHLIB_EXT}.{{ version }}  # [linux]
        - test ! -f ${PREFIX}/lib/libbip3x_jni-{{ version }}${SHLIB_EXT}  # [osx]
        - if exist %PREFIX%\\bin\\bip3x_jni-{{ version }}%SHLIB_EXT% exit 1  # [win]

  - name: libcbip3x-{{ so_major_version }}
    build:
      run_exports:
        - {{ pin_subpackage('libcbip3x-' ~ so_major_version) }}
    files:
      - lib/libcbip3x.so.{{ so_major_version }}  # [linux]
      - lib/libcbip3x.{{ so_major_version }}.dylib  # [osx]
      - bin\\cbip3x.{{ so_major_version }}.dll  # [win]
      - lib/libcbip3x.so.{{ version }}  # [linux]
      - lib/libcbip3x.{{ version }}.dylib  # [osx]
      - bin\\cbip3x.{{ version }}.dll  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ stdlib("c") }}
      host:
        - {{ pin_subpackage('libbip3x-' ~ so_major_version, exact=True) }}
      run:
        - {{ pin_subpackage('libbip3x-' ~ so_major_version, exact=True) }}
    test:
      source_files:
        - test-release
      commands:
        # No headers (verify no potential overlap)
        {% for path, headers in bip3x_header_paths.items() %}
          {% for header in headers %}
        - test ! -f ${PREFIX}/include/{{ path }}/{{ header }}  # [unix]
        - if exist %PREFIX%\\include\\{{ path | replace('/', '\\\\') }}\\{{ header }} exit 1  # [win]
          {% endfor %}
        {% endfor %}
        {% for header in cbip3x_h %}
        - test ! -f ${PREFIX}/include/cbip3x/{{ header }}  # [unix]
        - if exist %PREFIX%\\include\\cbip3x\\{{ header }} exit 1  # [win]
        {% endfor %}

        # Versioned cbip3x library
        - test -f ${PREFIX}/lib/libcbip3x${SHLIB_EXT}.{{ so_major_version }}  # [linux]
        - test -f ${PREFIX}/lib/libcbip3x.{{ so_major_version }}${SHLIB_EXT}  # [osx]
        - if not exist %PREFIX%\\bin\\cbip3x.{{ so_major_version }}%SHLIB_EXT% exit 1  # [win]
        - test -f ${PREFIX}/lib/libcbip3x${SHLIB_EXT}.{{ version }}  # [linux]
        - test -f ${PREFIX}/lib/libcbip3x.{{ version }}${SHLIB_EXT}  # [osx]
        - if not exist %PREFIX%\\bin\\cbip3x.{{ version }}%SHLIB_EXT% exit 1  # [win]

        # No non-versioned library
        - test ! -f ${PREFIX}/lib/libbip3x${SHLIB_EXT}  # [unix]
        - if exist %PREFIX%\\bin\\bip3x%SHLIB_EXT% exit 1  # [win]
        - if exist %PREFIX%\\lib\\bip3x.lib exit 1  # [win]
        - test ! -f ${PREFIX}/lib/libcbip3x${SHLIB_EXT}  # [unix]
        - if exist %PREFIX%\\bin\\cbip3x%SHLIB_EXT% exit 1  # [win]
        - if exist %PREFIX%\\lib\\cbip3x.lib exit 1  # [win]
        - test ! -f ${PREFIX}/lib64/libbip3x_jni${SHLIB_EXT}  # [linux]
        - test ! -f ${PREFIX}/lib/libbip3x_jni${SHLIB_EXT}  # [osx]
        - if exist %PREFIX%\\bin\\bip3x_jni%SHLIB_EXT% exit 1  # [win]
        - if exist %PREFIX%\\lib\\bip3x_jni.lib exit 1  # [win]

        # No JNI versioned library
        - test ! -f ${PREFIX}/lib64/libbip3x_jni${SHLIB_EXT}.{{ so_major_version }}  # [linux]
        - test ! -f ${PREFIX}/lib/libbip3x_jni.{{ so_major_version }}${SHLIB_EXT}  # [osx]
        - if exist %PREFIX%\\bin\\bip3x_jni.{{ so_major_version }}%SHLIB_EXT% exit 1  # [win]
        - test ! -f ${PREFIX}/lib64/libbip3x_jni${SHLIB_EXT}.{{ version }}  # [linux]
        - test ! -f ${PREFIX}/lib/libbip3x_jni.{{ version }}${SHLIB_EXT}  # [osx]
        - if exist %PREFIX%\\bin\\bip3x_jni-{{ version }}%SHLIB_EXT% exit 1  # [win]

        # Key testing phase: This test needs both libbbip3x.so.3 and libcbip3x.so.3
        - (cd test-release && LD_PRELOAD="${PREFIX}/lib/libbip3x.so.3:${PREFIX}/lib/libcbip3x.so.3:${PREFIX}/lib/libgcc_s.so.1:${PREFIX}/lib/libstdc++.so.6" ./bin/bip3x-test)  # [linux]
        - (cd test-release && DYLD_INSERT_LIBRARIES="${PREFIX}/lib/libbip3x.3.dylib:${PREFIX}/lib/libcbip3x.3.dylib" ./bin/bip3x-test)  # [osx]
        - cd test-release\\bin  # [win]
        - bip3x-test.exe  # [win]

  - name: libbip3x_jni-{{ so_major_version }}
    build:
      run_exports:
        - {{ pin_subpackage('libbip3x_jni-' ~ so_major_version) }}
    files:
      - lib64/libbip3x_jni.so.{{ so_major_version }}  # [linux]
      - lib/libbip3x_jni.{{ so_major_version }}.dylib  # [osx]
      - bin\\bip3x_jni.{{ so_major_version }}.dll  # [win]
      - lib64/libbip3x_jni.so.{{ version }}  # [linux]
      - lib/libbip3x_jni.{{ version }}.dylib  # [osx]
      - bin\\bip3x_jni.{{ version }}.dll  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ stdlib("c") }}
      host:
        - {{ pin_subpackage('libbip3x-' ~ so_major_version, exact=True) }}
      run:
        - {{ pin_subpackage('libbip3x-' ~ so_major_version, exact=True) }}
        - openjdk
    test:
      commands:
        # No headers (verify no potential overlap)
        {% for path, headers in bip3x_header_paths.items() %}
          {% for header in headers %}
        - test ! -f ${PREFIX}/include/{{ path }}/{{ header }}  # [unix]
        - if exist %PREFIX%\\include\\{{ path | replace('/', '\\\\') }}\\{{ header }} exit 1  # [win]
          {% endfor %}
        {% endfor %}
        {% for header in cbip3x_h %}
        - test ! -f ${PREFIX}/include/cbip3x/{{ header }}  # [unix]
        - if exist %PREFIX%\\include\\cbip3x\\{{ header }} exit 1  # [win]
        {% endfor %}

        # Versioned JNI library
        - test -f ${PREFIX}/lib64/libbip3x_jni${SHLIB_EXT}.{{ so_major_version }}  # [linux]
        - test -f ${PREFIX}/lib/libbip3x_jni.{{ so_major_version }}${SHLIB_EXT}  # [osx]
        - if not exist %PREFIX%\\bin\\bip3x_jni.{{ so_major_version }}%SHLIB_EXT% exit 1  # [win]
        - test -f ${PREFIX}/lib64/libbip3x_jni${SHLIB_EXT}.{{ version }}  # [linux]
        - test -f ${PREFIX}/lib/libbip3x_jni.{{ version }}${SHLIB_EXT}  # [osx]
        - if not exist %PREFIX%\\bin\\bip3x_jni.{{ version }}%SHLIB_EXT% exit 1  # [win]

        # No non-versioned library
        - test ! -f ${PREFIX}/lib/libbip3x${SHLIB_EXT}  # [unix]
        - if exist %PREFIX%\\bin\\bip3x%SHLIB_EXT% exit 1  # [win]
        - if exist %PREFIX%\\lib\\bip3x.lib exit 1  # [win]
        - test ! -f ${PREFIX}/lib/libcbip3x${SHLIB_EXT}  # [unix]
        - if exist %PREFIX%\\bin\\cbip3x%SHLIB_EXT% exit 1  # [win]
        - if exist %PREFIX%\\lib\\cbip3x.lib exit 1  # [win]
        - test ! -f ${PREFIX}/lib64/libbip3x_jni${SHLIB_EXT}  # [linux]
        - test ! -f ${PREFIX}/lib/libbip3x_jni${SHLIB_EXT}  # [osx]
        - if exist %PREFIX%\\bin\\bip3x_jni%SHLIB_EXT% exit 1  # [win]
        - if exist %PREFIX%\\lib\\bip3x_jni.lib exit 1  # [win]

        # No C-binding versioned library
        - test ! -f ${PREFIX}/lib/libcbip3x${SHLIB_EXT}.{{ so_major_version }}  # [linux]
        - test ! -f ${PREFIX}/lib/libcbip3x.{{ so_major_version }}${SHLIB_EXT}  # [osx]
        - if exist %PREFIX%\\bin\\cbip3x.{{ so_major_version }}%SHLIB_EXT% exit 1  # [win]
        - test ! -f ${PREFIX}/lib/libcbip3x${SHLIB_EXT}.{{ version }}  # [linux]
        - test ! -f ${PREFIX}/lib/libcbip3x.{{ version }}${SHLIB_EXT}  # [osx]
        - if exist %PREFIX%\\bin\\cbip3x.{{ version }}%SHLIB_EXT% exit 1  # [win]

  # Naming conversion (upstream github repo is called bip3x)
  - name: bip3x
    build:
      run_exports:
        - {{ pin_subpackage('libbip3x-' ~ so_major_version) }}
    requirements:
      host:
        - {{ pin_subpackage('libbip3x', exact=True) }}
      run:
        - {{ pin_subpackage('libbip3x', exact=True) }}
    test:
      commands:
        - test -f ${PREFIX}/lib/libbip3x${SHLIB_EXT}  # [unix]
        - if not exist %PREFIX%\\bin\\bip3x%SHLIB_EXT% exit 1  # [win]
        - if not exist %PREFIX%\\lib\\bip3x.lib exit 1  # [win]

  - name: cbip3x
    build:
      run_exports:
        - {{ pin_subpackage('libbip3x-' ~ so_major_version) }}
        - {{ pin_subpackage('libcbip3x-' ~ so_major_version) }}
    requirements:
      host:
        - {{ pin_subpackage('libcbip3x', exact=True) }}
      run:
        - {{ pin_subpackage('libcbip3x', exact=True) }}
    test:
      source_files:
        - test-release
      commands:
        # Key testing phase: This test needs both libbbip3x.so.3 and libcbip3x.so.3
        - (cd test-release && LD_PRELOAD="${PREFIX}/lib/libbip3x.so.3:${PREFIX}/lib/libcbip3x.so.3:${PREFIX}/lib/libgcc_s.so.1:${PREFIX}/lib/libstdc++.so.6" ./bin/bip3x-test)  # [linux]
        - (cd test-release && DYLD_INSERT_LIBRARIES="${PREFIX}/lib/libbip3x.3.dylib:${PREFIX}/lib/libcbip3x.3.dylib" ./bin/bip3x-test)  # [osx]
        - cd test-release\\bin  # [win]
        - bip3x-test.exe  # [win]

  - name: bip3x_jni
    build:
      run_exports:
        - {{ pin_subpackage('libbip3x-' ~ so_major_version) }}
        - {{ pin_subpackage('libbip3x_jni-' ~ so_major_version) }}
    requirements:
      host:
        - {{ pin_subpackage('libbip3x_jni', exact=True) }}
      run:
        - {{ pin_subpackage('libbip3x_jni', exact=True) }}
    test:
      commands:
        - test -f ${PREFIX}/lib64/libbip3x_jni${SHLIB_EXT}  # [linux]
        - test -f ${PREFIX}/lib/libbip3x_jni${SHLIB_EXT}  # [osx]
        - if not exist %PREFIX%\\bin\\bip3x_jni%SHLIB_EXT% exit 1  # [win]
        - if not exist %PREFIX%\\lib\\bip3x_jni.lib exit 1  # [win]

about:
  home: https://github.com/edwardstock/bip3x
  summary: 'Bip39 mnemonic C++ implementation. Contains java and C bindings.'
  description: |
    Logic almost completely taken from bitcoin-js library for generating mnemonic phrases.
  license: MIT
  license_file: LICENSE

extra:
  recipe-maintainers:
    - MementoRC
  feedstock-name: libbip3x
